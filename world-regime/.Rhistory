curvature = +0.1,
color = "black"
) +
geom_curve(
data = GWH_arrow,
aes(
x = x1,
y = y1,
xend = x2,
yend = y2
),
arrow = arrow(length = unit(0.07, "inch")),
size = 0.5,
curvature = -0.1,
color = "black"
) +
theme_minimal() +
theme(
text = element_text(family = "Kanit Light"),
plot.background = element_rect(fill = "#f0f0f0"),
#panel.background = element_rect(fill = "#f0f0f0"),
panel.border = element_blank(),
panel.grid = element_blank(),
panel.grid.major.y = element_line(colour = "grey50",
linetype = "dashed"),
axis.text = element_text(colour = "black", size = 12),
axis.title = element_text(colour = "black", size = 14),
legend.background = element_rect(fill = "#f0f0f0"),
legend.text = element_text(colour = "black", size = 10),
legend.title = element_text(colour = "black", size = 11),
legend.title.align = 0.5,
legend.direction = "horizontal",
legend.position = c(0.8, 0.25)
)
)
(
big_plot <- tv_ratings %>%
mutate(duration = str_extract(duration, "\\d")) %>%
mutate(rotten_tomatoes = parse_number(rotten_tomatoes)) %>%
drop_na(rating) %>%
ggplot() +
geom_jitter(
aes(x = duration, y = im_db, colour = date_added),
size = 3,
alpha = 0.85
) +
scale_colour_gradient(
low = "#3c4e66",
high = "#E30914",
na.value = NA,
trans = "date",
guide = guide_colorbar(title.position = "top")
) +
scale_y_continuous(limits = c(0, 10), breaks = c(0, 2, 4, 6, 8, 10)) +
labs(x = "Jumlah seasons",
y = "Rating IMDB",
colour = "Date series added") +
annotate(
"richtext",
x = 3.3,
y = 1,
family = "Kanit Light",
size = 3.5,
color = "black",
lineheight = .9,
label = glue::glue(
"<span style='font-family:Kanit'>{min_imdb$title}</span> mendapat  \nrating IMDB terendah: <span style='font-family:Kanit'>{min_imdb$im_db}</span>"
),
label.colour = NA,
fill = NA
) +
annotate(
"richtext",
x = 7.5,
y = 9.5,
family = "Kanit Light",
size = 3.5,
color = "black",
label = glue::glue(
"<span style='font-family:Kanit'>{max_imdb$title}</span> mendapat  \nrating IMDB tertinggi: <span style='font-family:Kanit'>{max_imdb$im_db}</span>"
),
label.colour = NA,
fill = NA
) +
geom_curve(
data = BB_arrow,
aes(
x = x1,
y = y1,
xend = x2,
yend = y2
),
arrow = arrow(length = unit(0.07, "inch")),
size = 0.5,
curvature = +0.1,
color = "black"
) +
geom_curve(
data = GWH_arrow,
aes(
x = x1,
y = y1,
xend = x2,
yend = y2
),
arrow = arrow(length = unit(0.07, "inch")),
size = 0.5,
curvature = -0.1,
color = "black"
) +
theme_minimal() +
theme(
text = element_text(family = "Kanit Light"),
plot.background = element_rect(fill = "#f0f0f0"),
#panel.background = element_rect(fill = "#f0f0f0"),
panel.border = element_blank(),
panel.grid = element_blank(),
panel.grid.major.y = element_line(colour = "grey50",
linetype = "dashed"),
axis.text = element_text(colour = "black", size = 12),
axis.title = element_text(colour = "black", size = 14),
legend.background = element_rect(fill = "#f0f0f0"),
legend.text = element_text(colour = "black", size = 10),
legend.title = element_text(colour = "black", size = 11),
legend.title.align = 0.5,
legend.direction = "horizontal",
legend.position = c(0.8, 0.25)
)
)
install.packages("semTools")
install.packages("lavaanPlot")
library(lavaan)
library(semTools)
library(lavaanPlot)
ESSData <- read_sav("~/workshopr/ESSData.sav")
library(readr)
install.packages("haven")
install.packages("haven")
library(haven)
ESSData <- read_sav("workshopr/ESSData.sav")
View(ESSData)
df <-
############################################################
#                                                          #
#                    Select Countries                      #
#                                                          #
############################################################
{
Germany <- subset(ESSData, cntry=="DE")
Spain <- subset(ESSData, cntry=="ES")
France <- subset(ESSData, cntry=="FR")
UK <- subset(ESSData, cntry=="GB")
}
South_Euro <- rbind(Spain,France)
Model_Trust <- 'Trust  =~ trstprl+trstlgl+trstplc+trstplt+trstprt+trstep+trstun'
Model_Trust2 <- 'GOV  =~ trstprl+trstlgl+trstplc
POL  =~ trstplt+trstprt
UNI  =~ trstep+trstun
'
Model_SWL  <- 'SWL  =~ stflife+stfeco+stfgov+stfdem'
Model_SWL2  <- 'SWL  =~ stflife+stfeco+stfgov+stfdem
stflife ~~ stfeco
stfgov ~~ stfdem'
library(tidytuesdayR)
library(tidyverse)
library(ggtext)
library(ragg)
# Load Data & Wrangling ---------------------------------------------------
tuesdata <- tidytuesdayR::tt_load(2021, week = 19)
install.packages("ragg")
# Load Data & Wrangling ---------------------------------------------------
tuesdata <- tidytuesdayR::tt_load(2021, week = 19)
library(devtools)
devtools::install_github("the-pudding/puddingR")
library(puddingR)
?puddingR
getwd()
library(tidyverse)
library(magick)
library(scales)
library(extrafont)
setwd("~/tidytuesday/democratic/")
regime <- read.csv("~/tidytuesday/democratic/world-population-by-political-regime.csv")
glimpse(regime)
regime <- regime %>%
select(-c("Code")) %>%
gather(key = type, value = count, -c("Entity", "Year")) %>%
mutate(lab = case_when(
type == "People.living.in.countries.with.missing.regime.data"~"No regime data",
type == "People.living.in.closed.autocracies"~"Closed autocracies",
type == "People.living.in.electoral.autocracies"~"Electoral autocracies",
type == "People.living.in.electoral.democracies"~"Electoral democracies",
type == "People.living.in.liberal.democracies"~"Liberal democracies",
)) %>%
group_by(Year, lab) %>%
summarise(n = sum(count)) %>%
mutate(percentage = n / sum(n))
regime$lab <- factor(
regime$lab,
c("No regime data",
"Closed autocracies",
"Electoral autocracies",
"Electoral democracies",
"Liberal democracies")
)
final1 <-  regime %>%
filter(Year == "2020") %>%
arrange(desc(lab)) %>%
mutate(
ypos = cumsum(percentage))
pal <-  c("#0a0a0a", "#d7191c", "#fdae61", "#abd9e9", "#2c7bb6")
regime <- regime %>%
mutate(
col_lab = case_when(
lab == "No regime data"~"#0a0a0a",
lab == "Closed autocracies"~"#d7191c",
lab == "Electoral autocracies"~"#fdae61",
lab == "Electoral democracies"~"#abd9e9",
lab == "Liberal democracies"~"#2c7bb6",
))
chartperc <- ggplot(regime, aes(x = Year, y = percentage, fill = lab)) +
geom_area(alpha = 0.65) +
scale_x_continuous(limits = c(1800, 2020),
breaks = c(1800, 1850, 1900, 1950, 2000,2020)) +
scale_y_continuous(breaks = seq(0.00, 1.00, by = 0.25),
labels = c("0 %", "25 %", "50 %", "75 %", "100 %")) +
scale_fill_manual(breaks = regime$lab,
values = regime$col_lab) +
scale_color_manual(breaks = regime$lab,
values = regime$col_lab) +
labs(title = "Warga dunia yang hidup \ndi bawah rezim politik berbeda",
subtitle = "Hampir setiap orang tidak memiliki hak politik demokratis di abad ke-19, \ntetapi banyak yang telah memperolehnya sejak itu.",
caption = "Source : Our World in Data \nChart : Mely Santoso (@melysantoso)") +
guides(color = guide_legend(override.aes = list(size = 5))) +
theme(plot.title = element_text(family = "Verdana", size = 20, face = "bold", vjust = 1),
plot.subtitle = element_text(color = 'grey30', size = 12),
plot.caption = element_text(family = "Arial", colour = 'grey40', size = 9, hjust = 0),
legend.title = element_blank(),
legend.position = "top",
panel.background = element_rect(fill = "#ffffff"),
plot.background = element_rect(fill = "#ffffff"),
legend.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_line(linetype = "dotted", colour = "grey70"),
panel.grid.major.x = element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
#axis.text.x = element_blank(),
legend.key.size=unit(0.5, 'cm'),
legend.text=element_text(family = "Calibri", size=11, hjust = 0),
axis.text=element_text(face = "bold", size=12)
)
chartperc
library(puddingR)
chartperc <- ggplot(regime, aes(x = Year, y = percentage, fill = lab)) +
geom_area(alpha = 0.65) +
scale_x_continuous(limits = c(1800, 2020),
breaks = c(1800, 1850, 1900, 1950, 2000,2020)) +
scale_y_continuous(breaks = seq(0.00, 1.00, by = 0.25),
labels = c("0 %", "25 %", "50 %", "75 %", "100 %")) +
scale_fill_manual(breaks = regime$lab,
values = regime$col_lab) +
scale_color_manual(breaks = regime$lab,
values = regime$col_lab) +
labs(title = "Warga dunia yang hidup \ndi bawah rezim politik berbeda",
subtitle = "Hampir setiap orang tidak memiliki hak politik demokratis di abad ke-19, \ntetapi banyak yang telah memperolehnya sejak itu.",
caption = "Source : Our World in Data \nChart : Mely Santoso (@melysantoso)") +
guides(color = guide_legend(override.aes = list(size = 5))) +
theme(plot.title = element_text(family = "Verdana", size = 20, face = "bold", vjust = 1),
plot.subtitle = element_text(color = 'grey30', size = 12),
plot.caption = element_text(family = "Arial", colour = 'grey40', size = 9, hjust = 0),
legend.title = element_blank(),
legend.position = "top",
panel.background = element_rect(fill = "#ffffff"),
plot.background = element_rect(fill = "#ffffff"),
legend.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_line(linetype = "dotted", colour = "grey70"),
panel.grid.major.x = element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
#axis.text.x = element_blank(),
legend.key.size=unit(0.3, 'cm'),
legend.text=element_text(family = "Calibri", size=10, hjust = 0),
axis.text=element_text(face = "bold", size=12)
)
chartperc
library(tidyverse)
library(magick)
library(scales)
library(extrafont)
setwd("~/datagravis/democratic/")
regime <- read.csv("~/datagravis/democratic/world-population-by-political-regime.csv")
glimpse(regime)
regime <- regime %>%
select(-c("Code")) %>%
gather(key = type, value = count, -c("Entity", "Year")) %>%
mutate(lab = case_when(
type == "People.living.in.countries.with.missing.regime.data"~"No regime data",
type == "People.living.in.closed.autocracies"~"Closed autocracies",
type == "People.living.in.electoral.autocracies"~"Electoral autocracies",
type == "People.living.in.electoral.democracies"~"Electoral democracies",
type == "People.living.in.liberal.democracies"~"Liberal democracies",
)) %>%
group_by(Year, lab) %>%
summarise(n = sum(count)) %>%
mutate(percentage = n / sum(n))
regime$lab <- factor(
regime$lab,
c("No regime data",
"Closed autocracies",
"Electoral autocracies",
"Electoral democracies",
"Liberal democracies")
)
final1 <-  regime %>%
filter(Year == "2020") %>%
arrange(desc(lab)) %>%
mutate(
ypos = cumsum(percentage))
pal <-  c("#0a0a0a", "#d7191c", "#fdae61", "#abd9e9", "#2c7bb6")
regime <- regime %>%
mutate(
col_lab = case_when(
lab == "No regime data"~"#0a0a0a",
lab == "Closed autocracies"~"#d7191c",
lab == "Electoral autocracies"~"#fdae61",
lab == "Electoral democracies"~"#abd9e9",
lab == "Liberal democracies"~"#2c7bb6",
))
chartperc <- ggplot(regime, aes(x = Year, y = percentage, fill = lab)) +
geom_area(alpha = 0.65) +
scale_x_continuous(limits = c(1800, 2020),
breaks = c(1800, 1850, 1900, 1950, 2000,2020)) +
scale_y_continuous(breaks = seq(0.00, 1.00, by = 0.25),
labels = c("0 %", "25 %", "50 %", "75 %", "100 %")) +
scale_fill_manual(breaks = regime$lab,
values = regime$col_lab) +
scale_color_manual(breaks = regime$lab,
values = regime$col_lab) +
labs(title = "Warga dunia yang hidup \ndi bawah rezim politik berbeda",
subtitle = "Hampir setiap orang tidak memiliki hak politik demokratis di abad ke-19, \ntetapi banyak yang telah memperolehnya sejak itu.",
caption = "Source : Our World in Data \nChart : Mely Santoso (@melysantoso)") +
guides(color = guide_legend(override.aes = list(size = 5))) +
theme(plot.title = element_text(family = "Verdana", size = 20, face = "bold", vjust = 1),
plot.subtitle = element_text(color = 'grey30', size = 12),
plot.caption = element_text(family = "Arial", colour = 'grey40', size = 9, hjust = 0),
legend.title = element_blank(),
legend.position = "top",
panel.background = element_rect(fill = "#ffffff"),
plot.background = element_rect(fill = "#ffffff"),
legend.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major.y = element_line(linetype = "dotted", colour = "grey70"),
panel.grid.major.x = element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
#axis.text.x = element_blank(),
legend.key.size=unit(0.3, 'cm'),
legend.text=element_text(family = "Calibri", size=10, hjust = 0),
axis.text=element_text(face = "bold", size=12)
)
chartperc
logo <- image_read("~/datagravis/democratic/weightaverage.png") #pake library(magick)
chartperc
grid::grid.raster(logo, x = 0.97, y = 0.99, just = c('right', 'top'), width = unit(1, 'inches')) #setting lokasi logo
df <- read.csv("~/tidytuesday/democratic/world-population-by-political-regime.csv")
df <- read.csv("~/datagravis/democratic/world-population-by-political-regime.csv")
df <- df %>%
select(-c("Code")) %>%
gather(key = type, value = count, -c("Entity", "Year")) %>%  # mengubah susunan data
mutate(lab = case_when( #membuat lab/kategori untuk masing-masing kategori data
type == "People.living.in.countries.with.missing.regime.data"~"No regime data",
type == "People.living.in.closed.autocracies"~"Closed autocracy",
type == "People.living.in.electoral.autocracies"~"Electoral autocracy",
type == "People.living.in.electoral.democracies"~"Electoral democracy",
type == "People.living.in.liberal.democracies" ~ "Liberal democracy",
))
df$lab <- factor(
df$lab,
c("No regime data",
"Closed autocracy",
"Electoral autocracy",
"Electoral democracy",
"Liberal democracy"
))
final1 <-  df %>%
filter(Year == "2020") %>%
arrange(desc(lab)) %>%
mutate(
ypos = cumsum(count))
pal <-  c("#0a0a0a", "#d7191c", "#fdae61", "#abd9e9", "#2c7bb6")
df <- df %>%
mutate(
col_lab = case_when(
lab == "No regime data"~"#0a0a0a",
lab == "Closed autocracy"~"#d7191c",
lab == "Electoral autocracy"~"#fdae61",
lab == "Electoral democracy"~"#abd9e9",
lab == "Liberal democracy"~"#2c7bb6",
))
finalplot <-  ggplot(df, aes(x = Year, y = count, fill = lab)) +
geom_area(alpha = 0.65) +
scale_x_continuous(limits = c(1800, 2020),
breaks = c(1800, 1850, 1900, 1950, 2000, 2020)) +
scale_y_continuous(breaks = seq(0, 7000000000, by = 1000000000), #Tentukan skala y
labels = c("0", "1 Miliar", "2 Miliar", "3 Miliar", "4 Miliar",
"5 Miliar", "6 Miliar", "7 Miliar")) +
scale_fill_manual(breaks = df$lab,
values = df$col_lab) +
scale_color_manual(breaks = df$lab,
values = df$col_lab) +
labs(title = "Warga dunia yang hidup \ndi bawah rezim politik berbeda",
subtitle = "Hampir setiap orang tidak memiliki hak politik demokratis di abad ke-19, \ntetapi banyak yang telah memperolehnya sejak itu.",
caption = "Source : Our World in Data \nChart : Mely Santoso (@melysantoso)") +
#geom_text(data = final1, aes(y = ypos-2000000, label = lab, color = lab), x =2020, hjust = 0, vjust = 5, family = "Trebuchet MS", size = 4, fontface = "bold") +
guides(color = guide_legend(override.aes = list(size = 5))) +
theme(plot.title = element_text(family = "Verdana", size = 20, face = "bold", vjust = 1),
plot.subtitle = element_text(color = 'grey30', size = 12),
plot.caption = element_text(family = "Arial", colour = 'grey40', size = 9, hjust = 0),
legend.title=element_blank(),
legend.position = "top",
panel.background = element_rect(fill = "#ffffff"), # ganti backgound jadi abu-abu
plot.background = element_rect(fill = "#ffffff"), # ganti background plot jadi abu-abu
legend.background = element_blank(), #element_rect(fill = "#f0f0f0"), # ganti background legend jadi abu-abu
panel.border = element_blank(), # ilangin panel border
panel.grid.major = element_blank(), # ngilangin grid border
panel.grid.minor = element_blank(), # ngilangin grid border
#panel.background = element_blank(),
panel.grid.major.y = element_line(linetype = "dotted", colour = "grey70"),
panel.grid.major.x = element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
#axis.text.x = element_blank(),
legend.key.size=unit(0.5, 'cm'),
legend.text=element_text(family = "Calibri", size=11, hjust = 0),
axis.text=element_text(face = "bold", size=12))
finalplot
logo <- image_read("~/tidytuesday/democratic/weightaverage.png") #pake library(magick)
logo <- image_read("~/datagravis/democratic/weightaverage.png") #pake library(magick)
finalplot
grid::grid.raster(logo, x = 0.97, y = 0.99, just = c('right', 'top'), width = unit(1, 'inches')) #setting lokasi logo
library(hrbrthemes)
library(ggchicklet)
library(showtext)
library(ggtext)
data("debates2019")
df <- debates2019 %>%
filter(debate_group == 1) %>%
mutate(speaker = fct_reorder(speaker, elapsed, sum, .desc = FALSE)) %>%
mutate(topic = fct_other(
topic,
c("Immigration", "Economy", "Climate", "Gun Control", "Healthcare", "Foreign Policy", "Civil Rights")
))
# Add font using showtext package
font_add(family = "kanit", regular = "Kanit-Regular.ttf")
font_add(family = "bebas", regular = "BebasNeue-Regular.ttf")
font_add(family = "Fira Sans", regular = "FiraSans-Regular.ttf")
font_add(family = "georgia", regular = "georgia.ttf")
font_add(family = "tnr", regular = "times.ttf")
showtext_auto()
plot <- df %>% ggplot(aes(speaker, elapsed, group = timestamp, fill = topic)) +
geom_chicklet(width = 0.75) +
annotate("text", x = "Swalwell", y = 5.8,
label = "Setiap segmen bar menunjukkan panjang jawaban \nkandidat terhadap sebuah pertanyaan.",
color = "black", family = "kanit", hjust = 0) +
scale_y_continuous(
expand = c(0, 0.0625),
position = "right",
breaks = seq(0, 14, 2),
labels = c(0, sprintf("%d min.", seq(2, 14, 2)))
) +
scale_fill_manual(
name = NULL,
values = c("Immigration" = "#ae4544",
"Economy" = "#d8cb98",
"Climate" = "#a4ad6f",
"Gun Control" = "#cc7c3a",
"Healthcare" = "#436f82",
"Foreign Policy" = "#7c5981",
"Civil Rights" = "#8fbacc",
"Other" = "#cccccc"
),
breaks = setdiff(unique(debates2019$topic), "Other")
) +
guides(
fill = guide_legend(nrow = 1)
) +
coord_flip() +
labs(
x = NULL, y = NULL, fill = NULL,
title = "<span style='color:#E60822;'>**Kandidat**</span> dan Topik Mana yang Paling Banyak <br>Mendapat Waktu dalam Debat Demokrat",
subtitle = "Malam Pertama dan Kedua Debat Kandidat dari Democrats Juni 2019",
caption = "Baca selengkapnya di: https://nyti.ms/3EqgNDC \nVisualisasi dibuat ulang oleh: @melysantoso"
) +
theme_ipsum_rc(grid="X") +
theme(plot.title = element_markdown(family = "georgia", size = 24, vjust = 0, hjust = 0.5),
plot.subtitle = element_text(family = "tnr", size = 12, hjust = 0.5, vjust = 0.5),
plot.caption = element_text(family = "Fira Sans", size = 9, hjust = 0.5),
legend.position = "top",
axis.text.x = element_text(color = "gray60", size = 10),
)
plot
logo <- image_read("~/tidytuesday/ourworldindata/water access/weightaverage.png") #pake library(magick)
plot
grid::grid.raster(logo, x = 0.20, y = 0.94, just = c('right', 'top'), width = unit(1, 'inches')) #setting lokasi logo
